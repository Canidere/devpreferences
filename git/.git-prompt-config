# Insert this into your bash profile (usually located at /etc/bash.bashrc, /etc/profile, ~/.bashrc, ~/.bash_profile, ~/.profile)
# config for git-prompt
MAGENTA="\[\033[0;35m\]"
YELLOW="\[\033[01;32m\]"
BLUE="\[\033[00;34m\]"
LIGHT_GRAY="\[\033[0;37m\]"
CYAN="\[\033[0;36m\]"
GREEN="\[\033[00m\]"
RED="\[\033[0;31m\]"
VIOLET='\[\033[01;35m\]'
export LS_OPTIONS='--color=auto'
export CLICOLOR='Yes'
export LSCOLORS=gxfxbEaEBxxEhEhBaDaCaD
function color_my_prompt {
  local __user_and_host="$GREEN\u" # \h =>to add host
  local __cur_location="$BLUE\W"   #capital 'W': current directory, small 'w':full file path
  local __git_branch_color="$RED"
  #local __git_branch='`git branch 2> /dev/null | grep -e ^* | sed -E s/^\\\\\*\ \(.+\)$/\(\\\\\1\)\ /`'
  #local __git_branch='$(__git_ps1 " (%s)")';
  local __git_branch='$(__git_ps1)';  
  # colour branch name depending on state
  if [[ "$(__git_ps1)" =~ "*" ]]; then           # if repository is dirty
     __git_branch_color="$RED"
  elif [[ "$(__git_ps1)" =~ "%" ]]; then         # if there are untracked files
     __git_branch_color="$BLUE"
  elif [[ "$(__git_ps1)" =~ "$" ]]; then         # if there is something stashed
     __git_branch_color="$YELLOW"
  elif [[ "$(__git_ps1)" =~ "=" ]]; then         # if local & remote branches are not ahead/behind
     __git_branch_color="$CYAN"
  fi
  local __prompt_tail="$VIOLET$"
  local __user_input_color="$GREEN"
  PS1="$__user_and_host $__cur_location$__git_branch_color$__git_branch$__prompt_tail$__user_input_color "
}
# call PROMPT_COMMAND which is executed before PS1
export PROMPT_COMMAND=color_my_prompt
#export PROMPT_COMMAND='__git_ps1 "\u:\W" "$"'
if ! shopt -oq posix; then
  if [ -f ~/.git-completion.bash ]; then
  . ~/.git-completion.bash
  fi
fi
if [ -f ~/.git-prompt.sh ]; then
  GIT_PS1_SHOWDIRTYSTATE=true
  GIT_PS1_SHOWSTASHSTATE=true
  GIT_PS1_SHOWUNTRACKEDFILES=true
  GIT_PS1_SHOWUPSTREAM="auto"
  GIT_PS1_HIDE_IF_PWD_IGNORED=true
  GIT_PS1_SHOWCOLORHINTS=true
  . ~/.git-prompt.sh
fi
